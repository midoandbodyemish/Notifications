<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ุฅุดุนุงุฑุงุช Firebase</title>

    <!-- ุชุญููู ููุชุจุฉ Firebase -->
    <script src="https://www.gstatic.com/firebasejs/10.10.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/10.10.0/firebase-messaging.js"></script>

</head>
<body>

    <h1>ูุฑุญุจูุงุ ุงุฎุชุจุฑ ุฅุดุนุงุฑุงุช ูุงูุฑุจูุณ!</h1>
    <button id="enableNotifications">๐ ุชูุนูู ุงูุฅุดุนุงุฑุงุช</button>

    <script>
        // โ ุฅุนุฏุงุฏ Firebase
        const firebaseConfig = {
            apiKey: "AIzaSyAJzK9G2MJieXHmeeHUBdULdDt8NwyxyKQ",
            authDomain: "khedma-fd534.firebaseapp.com",
            projectId: "khedma-fd534",
            storageBucket: "khedma-fd534.firebasestorage.app",
            messagingSenderId: "186556101962",
            appId: "1:186556101962:web:3edb278b50948378f83db3",
            measurementId: "G-F6C0180ZDS"
        };

        firebase.initializeApp(firebaseConfig);
        const messaging = firebase.messaging();

        // โ ุชุณุฌูู Service Worker
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('/firebase-messaging-sw.js')
                .then((registration) => {
                    console.log('โ Service Worker ูุณุฌู ุจูุฌุงุญ:', registration);
                    messaging.useServiceWorker(registration);
                })
                .catch((error) => {
                    console.log('โ ูุดู ุชุณุฌูู Service Worker:', error);
                });
        }

        // โ ุชูุนูู ุงูุฅุดุนุงุฑุงุช
        document.getElementById('enableNotifications').addEventListener('click', () => {
            Notification.requestPermission().then((permission) => {
                if (permission === 'granted') {
                    console.log('๐ ุชู ุชูุนูู ุงูุฅุดุนุงุฑุงุช!');
                    messaging.getToken().then((token) => {
                        console.log('๐ ุฑูุฒ ุงููุณุชุฎุฏู:', token);
                    }).catch((error) => {
                        console.log('โ ุฎุทุฃ ูู ุฌูุจ ุงูุฑูุฒ:', error);
                    });
                } else {
                    console.log('๐ซ ุชู ุฑูุถ ุงูุฅุดุนุงุฑุงุช');
                }
            });
        });

        // โ ุงุณุชูุจุงู ุงูุฅุดุนุงุฑุงุช ุนูุฏ ุชุดุบูู ุงููููุน
        messaging.onMessage((payload) => {
            console.log('๐ฉ ุฅุดุนุงุฑ ูุณุชูู:', payload);
            alert(`๐ข ุฅุดุนุงุฑ ุฌุฏูุฏ: ${payload.notification.title}\n${payload.notification.body}`);
        });

    </script>

</body>
</html>
